theme_few(base_size = 18, base_family = "serif")  +
theme(plot.title = element_text(hjust=0.5)) +
scale_colour_few("Dark")
print(p)
return(p)
}
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(n, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
getwd()
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
###################################################################################
# TheoryInformation.R
#
# Implementation of theory information descriptors
#
# Author: Eduarda Chagas
# Date : Set 2019
# Contact: eduarda.chagas@dcc.ufmg.br
####################################################################################
if(!require(ggplot2)) install.packages("ggplot2")
shannonEntropy <- function(p){
h <- p * log(p)
h[is.nan(h)] <- 0
return(-sum(h))
}
shannonNormalized <- function(p){
h = (shannonEntropy(p)/log(length(p)))
h[is.nan(h)] <- 0
return(h)
}
jensenDivergence<-function(p){
cc = rep(1/length(p),length(p))
s_p = shannonEntropy(p)
s_q = shannonEntropy(cc)
s_pq = shannonEntropy((p+cc)/2)
divergence = sum(s_pq - (s_p/2) - (s_q/2))
return(divergence)
}
constant <- function(p){
k = (0.5)/length(p)
a1 = (0.5 + k) * log(0.5 + k)
a2 = (length(p) - 1) * k * log(k)
a3 = (1 - 0.5) * log(length(p))
b = -1/(a1 + a2 + a3)
return(b)
}
Ccomplexity<-function(p){
cc <- jensenDivergence(p) * constant(p) * shannonNormalized(p)
return(cc)
}
cotas <- function(dimension){
c1x = readingMPR(dimension,1)
c1y = readingMPR(dimension,2)
c2x = readingMPR(dimension,3)
c2y = readingMPR(dimension,4)
cotas.1xy = data.frame("c1x" = c1x, "c1y" = c1y)
cotas.2xy = data.frame("c2x" = c2x, "c2y" = c2y)
p = ggplot(cotas.1xy, aes(c1x, c1y)) + geom_line(size=0.5, color="gray") +
geom_line(aes(x=c2x, y=c2y), cotas.2xy, size=0.5, color="gray") +
theme(plot.title = element_text(hjust=0.5))
return(p)
}
readingMPR<-function(dimension,option=0){
if(dimension == 3){
continua = "Data/trozos/continuaN6.txt"
trozo = "Data/trozos/trozosN6.txt"
}
if(dimension == 4){
continua = "Data/trozos/continuaN24.txt"
trozo = "Data/trozos/trozosN24.txt"
}
if(dimension == 5){
continua = "Data/trozos/continuaN120.txt"
trozo = "Data/trozos/trozosN120.txt"
}
if(dimension == 6){
continua = "Data/trozos/continuaN720.txt"
trozo = "Data/trozos/trozosN720.txt"
}
if(dimension == 36){
continua = "Data/trozos/continuaN36.txt"
trozo = "Data/trozos/trozosN36.txt"
}
if(dimension == 576){
continua = "Data/trozos/continuaN576.txt"
trozo = "Data/trozos/trozosN576.txt"
}
if(dimension == 14400){
continua = "Data/trozos/continuaN14400.txt"
trozo = "Data/trozos/trozosN14400.txt"
}
if(dimension == 518400){
continua = "Data/trozos/continuaN518400.txt"
trozo = "Data/trozos/trozosN518400.txt"
}
curva1x = read.table(continua, stringsAsFactors=FALSE, fileEncoding="latin1")[,1]
if(option==1) return(curva1x)
curva1y = read.table(continua, stringsAsFactors=FALSE, fileEncoding="latin1")[,2]
if(option==2) return(curva1y)
curva2x = read.table(trozo, stringsAsFactors=FALSE, fileEncoding="latin1")[,1]
if(option==3) return(curva2x)
curva2y = read.table(trozo, stringsAsFactors=FALSE, fileEncoding="latin1")[,2]
if(option==4) return(curva2y)
}
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
print(plots[[1]])
factorial(dimension)^2
factorial(3)^2
factorial(4)^2
factorial(5)^2
factorial(6)^2
########################################################################################################
# Author: Eduarda Chagas
# Date : Jan 2021
# Contact: eduarda.chagas@dcc.ufmg.br
########################################################################################################
############################################# Packages #################################################
if(!require(gtools)) install.packages("gtools")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(ggthemes)) install.packages("ggthemes")
if(!require(ggpubr)) install.packages("ggpubr")
if(!require(latex2exp)) install.packages("latex2exp")
source("theory_information.R")
###################################### Function of Plot ################################################
HC.Plane.no.cota <- function(dimension, signal.values){
#XMIN = min(signal.values[,1]) + 0.0005
#XMAX = min(max(signal.values[,1]) + 0.0005, 1)
#YMIN = max(0,min(signal.values[,2]))
#YMAX = max(signal.values[,2])
signal.values = data.frame("H" = signal.values[,1], "C" = signal.values[,2])
p = cotas(factorial(dimension)^2)
p = p +
geom_point(data = signal.values, aes(x = H, y = C), size = 2) +
labs(x = TeX("\\textit{H}"), y = TeX("\\textit{C}"))  +
scale_shape_identity() +
#xlim(limits=c(XMIN, XMAX)) + ylim(limits=c(YMIN, YMAX)) +
theme_few(base_size = 18, base_family = "serif")  +
theme(plot.title = element_text(hjust=0.5)) +
scale_colour_few("Dark")
print(p)
return(p)
}
plot.TG.analysis <- function(){
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
return(plot.BP)
}
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
print(plots[[1]])
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T4.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T5.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
pdf("HCAnalysis.pdf", width = 18, height = 5)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = TeX("\\textit{H} $ \\times $ \\textit{C Plane}")) +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 18, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
pdf("HCAnalysis.pdf", width = 7, height = 5)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = TeX("\\textit{H} $ \\times $ \\textit{C Plane}")) +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 18, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = TeX("\\textit{H} $ \\times $ \\textit{C Plane}")) +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 18, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
HC.Plane.no.cota <- function(dimension, signal.values){
#XMIN = min(signal.values[,1]) + 0.0005
#XMAX = min(max(signal.values[,1]) + 0.0005, 1)
#YMIN = max(0,min(signal.values[,2]))
#YMAX = max(signal.values[,2])
signal.values = data.frame("H" = signal.values[,1], "C" = signal.values[,2])
p = cotas(factorial(dimension)^2)
p = p +
geom_point(data = signal.values, aes(x = H, y = C), size = 2) +
labs(x = TeX("\\textit{H}"), y = TeX("\\textit{C}"))  +
scale_shape_identity() +
#xlim(limits=c(XMIN, XMAX)) + ylim(limits=c(YMIN, YMAX)) +
theme_few(base_size = 14, base_family = "serif")  +
theme(plot.title = element_text(hjust=0.5)) +
scale_colour_few("Dark")
print(p)
return(p)
}
HC.Plane.no.cota <- function(dimension, signal.values){
#XMIN = min(signal.values[,1]) + 0.0005
#XMAX = min(max(signal.values[,1]) + 0.0005, 1)
#YMIN = max(0,min(signal.values[,2]))
#YMAX = max(signal.values[,2])
signal.values = data.frame("H" = signal.values[,1], "C" = signal.values[,2])
p = cotas(factorial(dimension)^2)
p = p +
geom_point(data = signal.values, aes(x = H, y = C), size = 2) +
labs(x = TeX("\\textit{H}"), y = TeX("\\textit{C}"))  +
scale_shape_identity() +
#xlim(limits=c(XMIN, XMAX)) + ylim(limits=c(YMIN, YMAX)) +
theme_few(base_size = 14, base_family = "serif")  +
theme(plot.title = element_text(hjust=0.5)) +
scale_colour_few("Dark")
print(p)
return(p)
}
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T4.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T5.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Bandt-Pompe")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = TeX("\\textit{H} $ \\times $ \\textit{C Plane}")) +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 18, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 3")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T4.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 4")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T5.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = TeX("\\textit{H} $ \\times $ \\textit{C Plane}")) +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 18, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
########################################################################################################
# Author: Eduarda Chagas
# Date : Jan 2021
# Contact: eduarda.chagas@dcc.ufmg.br
########################################################################################################
############################################# Packages #################################################
if(!require(gtools)) install.packages("gtools")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(ggthemes)) install.packages("ggthemes")
if(!require(ggpubr)) install.packages("ggpubr")
if(!require(latex2exp)) install.packages("latex2exp")
source("theory_information.R")
###################################### Function of Plot ################################################
HC.Plane.no.cota <- function(dimension, signal.values){
#XMIN = min(signal.values[,1]) + 0.0005
#XMAX = min(max(signal.values[,1]) + 0.0005, 1)
#YMIN = max(0,min(signal.values[,2]))
#YMAX = max(signal.values[,2])
signal.values = data.frame("H" = signal.values[,1], "C" = signal.values[,2])
p = cotas(factorial(dimension)^2)
p = p +
geom_point(data = signal.values, aes(x = H, y = C), size = 2) +
labs(x = TeX("\\textit{H}"), y = TeX("\\textit{C}"))  +
scale_shape_identity() +
#xlim(limits=c(XMIN, XMAX)) + ylim(limits=c(YMIN, YMAX)) +
theme_few(base_size = 14, base_family = "serif")  +
theme(plot.title = element_text(hjust=0.5)) +
scale_colour_few("Dark")
print(p)
return(p)
}
plot.TG.analysis <- function(){
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 3")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T4.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 4")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T5.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 18, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
}
plot.TG.analysis()
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 3")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T4.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 4")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T5.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 18, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 3")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T4.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 4")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T5.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 3")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T4.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 4")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T5.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
