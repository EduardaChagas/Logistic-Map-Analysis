plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T3.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 3")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T4.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 4")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T5.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T6.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
########################################################################################################
# Author: Eduarda Chagas
# Date : Jan 2021
# Contact: eduarda.chagas@dcc.ufmg.br
########################################################################################################
############################################# Packages #################################################
if(!require(gtools)) install.packages("gtools")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(ggthemes)) install.packages("ggthemes")
if(!require(ggpubr)) install.packages("ggpubr")
if(!require(latex2exp)) install.packages("latex2exp")
source("theory_information.R")
###################################### Function of Plot ################################################
HC.Plane.no.cota <- function(dimension, signal.values){
#XMIN = min(signal.values[,1]) + 0.0005
#XMAX = min(max(signal.values[,1]) + 0.0005, 1)
#YMIN = max(0,min(signal.values[,2]))
#YMAX = max(signal.values[,2])
signal.values = data.frame("H" = signal.values[,1], "C" = signal.values[,2])
p = cotas(factorial(dimension)^2)
p = p +
geom_point(data = signal.values, aes(x = H, y = C), size = 2) +
labs(x = TeX("\\textit{H}"), y = TeX("\\textit{C}"))  +
scale_shape_identity() +
#xlim(limits=c(XMIN, XMAX)) + ylim(limits=c(YMIN, YMAX)) +
theme_few(base_size = 14, base_family = "serif")  +
theme(plot.title = element_text(hjust=0.5)) +
scale_colour_few("Dark")
print(p)
return(p)
}
plot.TG.analysis <- function(){
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 3")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 4")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
}
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 3")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 4")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 5")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 6")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/HCD3T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 1")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/HCD4T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 1")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/HCD5T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 1")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/HCD6T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 1")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
########################################################################################################
# Author: Eduarda Chagas
# Date : Jan 11, 2021
# Contact: eduarda.chagas@dcc.ufmg.br
########################################################################################################
############################################# Packages #################################################
if(!require(gtools)) install.packages("gtools")
if(!require(doParallel)){
install.packages("doParallel")
require(doParallel)
}
source("theory_information.R")
######################################Bandt-Pompe functions #############################################
define.symbols <- function(dimension){
d = c(1:dimension)
symbol = matrix(unlist(permutations(n=dimension,r = dimension)),nrow = factorial(dimension),ncol = dimension,byrow = FALSE)
symbol = symbol - 1
symbol
}
FP <- function(n, dimension, delay){
dyn.load("FormationPatterns.so")
p <- .Call("FormationPatterns", n, dimension, delay)
p = t(p) + 1
return(p)
}
formationPattern <- function(serie, dimension, delay, option){
i = 1
n = length(serie)
p_patterns = elements = index2 = matrix(nrow=n,ncol=dimension)
index = c(0:(dimension-1))
index2 = FP(length(serie), dimension, delay)
while((i + ((dimension-1)*delay)) <= n){
elements[i,] = serie[index2[i,]]
p_patterns[i,] = index[order(elements[i,])]
i = i + 1
}
if(option == 0){
p_patterns = na.omit(p_patterns)
return(p_patterns[1:dim(p_patterns)[1],])
}else if(option == 1){
elements = na.omit(elements)
return(elements[1:dim(elements)[1],])
}else{
index2 = na.omit(index2)
return(index2[1:dim(index2)[1],])
}
}
pattern.wedding <- function(patterns){
#if(max(patterns) == 2)
#  patterns = patterns + 1
m = dim(patterns)[1]
D = dim(patterns)[2]
symbols = define.symbols(D)
wedding = rep(0, m)
for(i in 1:m){
e = 0
j = 1
stop = F
while(j <= factorial(D) && stop == F){
if(sum(symbols[j,] == patterns[i,]) == D){
wedding[i] = j
stop = T
}
j = j + 1
}
}
return(wedding)
}
transition.graph <- function(series, dimension, delay){
graph = matrix(0, nrow = factorial(dimension), ncol = factorial(dimension))
patterns = formationPattern(series, dimension, delay, 0)
wedding = pattern.wedding(patterns)
m = length(wedding)
for(i in 1:(m-1)){
graph[wedding[i], wedding[i+1]] = graph[wedding[i], wedding[i+1]] + 1
}
graph = graph/(m-1)
graph = as.vector(graph)
return(graph)
}
TG <- function(series, dimension, delay){
patterns = formationPattern(series, dimension, delay, 0)
wedding = pattern.wedding(patterns)
size = length(wedding)
dyn.load("TransitionGraph.so")
probability <- .Call("TransitionGraph", wedding, dimension, size)
return(probability)
}
bandt.pompe <- function(series, dimension, delay){
dyn.load("BandtPompe.so")
elements = formationPattern(series, dimension, delay, 1)
element.size = dim(elements)[1]
probability <- .Call("BandtPompe", elements, dimension, element.size)
return(probability)
}
series.generator.map <- function(r){
time.series <- vector(mode="numeric", length = 10^6)
index = 1
time.series[index] <- 0.1
for(i in 2:(1000 + (10^6))){
time.series[index] <- r * time.series[index] * (1 - time.series[index])
if(i > 1001){
index = index + 1
time.series[index] <- r * time.series[index-1] * (1 - time.series[index-1])
}
}
return(time.series)
}
hc.analysis <- function(dimension){
j = 1
r = seq(from = 3.5, to = 4.0, by = 0.01)
Entropy.Complexity = matrix(nrow = length(r), ncol = 2)
for(rr in r){
series =  series.generator.map(rr)
g = bandt.pompe(series, dimension, 1)
Entropy.Complexity[j, 1] <- shannonNormalized(as.vector(g))
Entropy.Complexity[j, 2] <- Ccomplexity(as.vector(g))
j = j + 1
}
cat("D: ", dimension, " - tal: ", 1, "\n")
write.csv(Entropy.Complexity, paste0("Data/BP_HC_D", dimension, "T", 1, ".csv"))
}
registerDoParallel(cores = 4)
foreach(i = 3:6) %dopar% {
hc.analysis(i)
}
########################################################################################################
# Author: Eduarda Chagas
# Date : Jan 2021
# Contact: eduarda.chagas@dcc.ufmg.br
########################################################################################################
############################################# Packages #################################################
if(!require(gtools)) install.packages("gtools")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(ggthemes)) install.packages("ggthemes")
if(!require(ggpubr)) install.packages("ggpubr")
if(!require(latex2exp)) install.packages("latex2exp")
source("theory_information.R")
###################################### Function of Plot ################################################
HC.Plane.no.cota <- function(dimension, signal.values){
#XMIN = min(signal.values[,1]) + 0.0005
#XMAX = min(max(signal.values[,1]) + 0.0005, 1)
#YMIN = max(0,min(signal.values[,2]))
#YMAX = max(signal.values[,2])
signal.values = data.frame("H" = signal.values[,1], "C" = signal.values[,2])
p = cotas(factorial(dimension))
p = p +
geom_point(data = signal.values, aes(x = H, y = C), size = 2) +
labs(x = TeX("\\textit{H}"), y = TeX("\\textit{C}"))  +
scale_shape_identity() +
#xlim(limits=c(XMIN, XMAX)) + ylim(limits=c(YMIN, YMAX)) +
theme_few(base_size = 14, base_family = "serif")  +
theme(plot.title = element_text(hjust=0.5)) +
scale_colour_few("Dark")
print(p)
return(p)
}
plot.TG.analysis <- function(){
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D3T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 1")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D4T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 1")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D5T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 1")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D6T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 1")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
}
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D3T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 1")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D4T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 1")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D5T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 1")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D6T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 1")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
########################################################################################################
# Author: Eduarda Chagas
# Date : Jan 2021
# Contact: eduarda.chagas@dcc.ufmg.br
########################################################################################################
############################################# Packages #################################################
if(!require(gtools)) install.packages("gtools")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(ggthemes)) install.packages("ggthemes")
if(!require(ggpubr)) install.packages("ggpubr")
if(!require(latex2exp)) install.packages("latex2exp")
source("theory_information.R")
###################################### Function of Plot ################################################
HC.Plane.no.cota <- function(dimension, signal.values){
#XMIN = min(signal.values[,1]) + 0.0005
#XMAX = min(max(signal.values[,1]) + 0.0005, 1)
#YMIN = max(0,min(signal.values[,2]))
#YMAX = max(signal.values[,2])
signal.values = data.frame("H" = signal.values[,1], "C" = signal.values[,2])
p = cotas(dimension)
p = p +
geom_point(data = signal.values, aes(x = H, y = C), size = 2) +
labs(x = TeX("\\textit{H}"), y = TeX("\\textit{C}"))  +
scale_shape_identity() +
#xlim(limits=c(XMIN, XMAX)) + ylim(limits=c(YMIN, YMAX)) +
theme_few(base_size = 14, base_family = "serif")  +
theme(plot.title = element_text(hjust=0.5)) +
scale_colour_few("Dark")
print(p)
return(p)
}
plot.TG.analysis <- function(){
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D3T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 1")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D4T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 1")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D5T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 1")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D6T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 1")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
}
plots = array(list(), 4)
n.total = 51
d = tau = 3
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D3T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[1]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 3, Delay = 1")))
d = tau = 4
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D4T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[2]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 4, Delay = 1")))
d = tau = 5
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D5T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[3]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 5, Delay = 1")))
d = tau = 6
Entropy.Complexity.csv = read.csv(file="Data/BP_HC_D6T1.csv", header=TRUE, sep=",")
Entropy.Complexity = matrix(nrow = n.total, ncol = 2)
Entropy.Complexity[,1] = Entropy.Complexity.csv[1:n.total, 'V1']
Entropy.Complexity[,2] = Entropy.Complexity.csv[1:n.total, 'V2']
plots[[4]] = HC.Plane.no.cota(d, Entropy.Complexity) + ggtitle(expression(italic("Dimension = 6, Delay = 1")))
pdf("HCAnalysis.pdf", width = 10, height = 7)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]],
ncol = 2, nrow = 2, common.legend = TRUE, legend = "right") +
labs(title = "Ordinal Patterns Transition Graphs") +
labs(x = TeX("\\textit{Normalized Entropy}"), y = TeX("\\textit{Statistical Complexity}"))  +
theme_igray() + theme(text = element_text(size = 16, family="Times", face="italic"), plot.title = element_text(hjust = 0.5)) +
guides(colour = guide_legend(override.aes = list(size = 3)))
dev.off()
